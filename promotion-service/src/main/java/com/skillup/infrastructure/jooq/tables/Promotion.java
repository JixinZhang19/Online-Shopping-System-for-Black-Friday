/*
 * This file is generated by jOOQ.
 */
package com.skillup.infrastructure.jooq.tables;


import com.skillup.infrastructure.jooq.Indexes;
import com.skillup.infrastructure.jooq.Keys;
import com.skillup.infrastructure.jooq.PromotionService;
import com.skillup.infrastructure.jooq.tables.records.PromotionRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Promotion extends TableImpl<PromotionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>promotion-service.promotion</code>
     */
    public static final Promotion PROMOTION = new Promotion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PromotionRecord> getRecordType() {
        return PromotionRecord.class;
    }

    /**
     * The column <code>promotion-service.promotion.promotion_id</code>.
     */
    public final TableField<PromotionRecord, String> PROMOTION_ID = createField(DSL.name("promotion_id"), SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>promotion-service.promotion.promotion_name</code>.
     */
    public final TableField<PromotionRecord, String> PROMOTION_NAME = createField(DSL.name("promotion_name"), SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>promotion-service.promotion.commodity_id</code>.
     */
    public final TableField<PromotionRecord, String> COMMODITY_ID = createField(DSL.name("commodity_id"), SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>promotion-service.promotion.original_price</code>.
     */
    public final TableField<PromotionRecord, Integer> ORIGINAL_PRICE = createField(DSL.name("original_price"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>promotion-service.promotion.promotion_price</code>.
     */
    public final TableField<PromotionRecord, Integer> PROMOTION_PRICE = createField(DSL.name("promotion_price"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>promotion-service.promotion.start_time</code>.
     */
    public final TableField<PromotionRecord, LocalDateTime> START_TIME = createField(DSL.name("start_time"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

    /**
     * The column <code>promotion-service.promotion.end_time</code>.
     */
    public final TableField<PromotionRecord, LocalDateTime> END_TIME = createField(DSL.name("end_time"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

    /**
     * The column <code>promotion-service.promotion.status</code>.
     */
    public final TableField<PromotionRecord, Integer> STATUS = createField(DSL.name("status"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>promotion-service.promotion.total_stock</code>.
     */
    public final TableField<PromotionRecord, Long> TOTAL_STOCK = createField(DSL.name("total_stock"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>promotion-service.promotion.available_stock</code>.
     */
    public final TableField<PromotionRecord, Long> AVAILABLE_STOCK = createField(DSL.name("available_stock"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>promotion-service.promotion.lock_stock</code>.
     */
    public final TableField<PromotionRecord, Long> LOCK_STOCK = createField(DSL.name("lock_stock"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>promotion-service.promotion.image_url</code>.
     */
    public final TableField<PromotionRecord, String> IMAGE_URL = createField(DSL.name("image_url"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    private Promotion(Name alias, Table<PromotionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Promotion(Name alias, Table<PromotionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>promotion-service.promotion</code> table reference
     */
    public Promotion(String alias) {
        this(DSL.name(alias), PROMOTION);
    }

    /**
     * Create an aliased <code>promotion-service.promotion</code> table reference
     */
    public Promotion(Name alias) {
        this(alias, PROMOTION);
    }

    /**
     * Create a <code>promotion-service.promotion</code> table reference
     */
    public Promotion() {
        this(DSL.name("promotion"), null);
    }

    public <O extends Record> Promotion(Table<O> child, ForeignKey<O, PromotionRecord> key) {
        super(child, key, PROMOTION);
    }

    @Override
    public Schema getSchema() {
        return PromotionService.PROMOTION_SERVICE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PROMOTION_IDX_PROMOTION_COMMODITY_ID, Indexes.PROMOTION_IDX_PROMOTION_END_TIME, Indexes.PROMOTION_IDX_PROMOTION_START_TIME);
    }

    @Override
    public UniqueKey<PromotionRecord> getPrimaryKey() {
        return Keys.KEY_PROMOTION_PRIMARY;
    }

    @Override
    public List<UniqueKey<PromotionRecord>> getKeys() {
        return Arrays.<UniqueKey<PromotionRecord>>asList(Keys.KEY_PROMOTION_PRIMARY);
    }

    @Override
    public Promotion as(String alias) {
        return new Promotion(DSL.name(alias), this);
    }

    @Override
    public Promotion as(Name alias) {
        return new Promotion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Promotion rename(String name) {
        return new Promotion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Promotion rename(Name name) {
        return new Promotion(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, String, String, Integer, Integer, LocalDateTime, LocalDateTime, Integer, Long, Long, Long, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
